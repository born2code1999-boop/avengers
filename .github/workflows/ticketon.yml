name: Ticketon Watcher

on:
  schedule:
    - cron: "*/5 * * * *"      # :00, :05, :10, ...
    - cron: "2-59/5 * * * *"   # :02, :07, :12, ...
    - cron: "4-59/5 * * * *"   # :04, :09, :14, ...
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
      group: ticketon-watcher
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      # Node + npm cache (берёт по package-lock.json)
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps (npm ci)
        run: npm ci

      # Кэш браузеров Playwright (папка с бинарями Chromium)
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Ставим браузер, если его нет в кэше (без лишнего apt)
      - name: Ensure Playwright Chromium is installed
        run: |
          if [ ! -d "$HOME/.cache/ms-playwright" ] || [ -z "$(ls -A $HOME/.cache/ms-playwright)" ]; then
            echo "No Playwright cache found, installing Chromium…"
            npx playwright install chromium
          else
            echo "Playwright cache restored."
            npx playwright --version
          fi

      - name: Run watcher (one-shot)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          KEYWORDS:           ${{ vars.KEYWORDS }}
          URLS:               ${{ vars.URLS }}
          CHECK_INTERVAL_SEC: "60"
          ONE_SHOT:           "true"
          NOTIFY_TTL_HOURS:   ${{ vars.NOTIFY_TTL_HOURS || '24' }}
          DEEP_CHECK:         ${{ vars.DEEP_CHECK || 'true' }}
        run: node index.js

      - name: Notify failure to Telegram
        if: failure()
        env:
          BOT:  ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MSG="❌ Ticketon watcher failed (run $GITHUB_RUN_ID in $GITHUB_REPOSITORY)"
          curl -s "https://api.telegram.org/bot$BOT/sendMessage" \
            -d chat_id="$CHAT" -d text="$MSG" >/dev/null
